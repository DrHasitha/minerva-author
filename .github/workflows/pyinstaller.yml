name: PyInstaller

on:
  push:
    branches: [ master ]
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.7]
    runs-on: ${{ matrix.os }}
    name: Pyinstaller for ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: requirements.yml
          activate-environment: build-environment
          python-version: ${{ matrix.python-version }}
      - name: OpenSlide Windows
        if: startsWith(matrix.os,'windows')
        shell: cmd /C CALL {0}
        run: |
          curl https://github.com/openslide/openslide-winbuild/releases/download/v20171122/openslide-win64-20171122.zip -L -o openslide.zip
          unzip openslide.zip
          dir
          move openslide-win64-20171122\bin\* src\
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: OpenSlide MacOS
        if: startsWith(matrix.os,'mac')
        shell: bash -l {0}
        run: |
          brew install openslide
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the Minerva Story submodule
        run: |
          git submodule update --init --recursive
      - name: Copy dlls on Windows
        if: startsWith(matrix.os,'windows')
        shell: cmd /C CALL {0}
        run: |
          copy "%CONDA_PREFIX%\Library\bin\libcrypto-1_1-x64.dll" "%CONDA_PREFIX%\DLLs\libcrypto-1_1-x64.dll"
          copy "%CONDA_PREFIX%\Library\bin\libssl-1_1-x64.dll" "%CONDA_PREFIX%\DLLs\libssl-1_1-x64.dll"
      - name: Package Windows
        if: startsWith(matrix.os,'windows')
        shell: cmd /C CALL {0}
        run: |
          package_win.bat
      - name: Zip Windows
        if: startsWith(matrix.os,'windows')
        shell: cmd /C CALL {0}
        run: |
          move "dist" "minerva_author_windows"
          7z a minerva_author_windows.zip minerva_author_windows
      - name: Release Windows
        if: startsWith(matrix.os,'windows')
        run: |
          gh release upload --clobber ${{ env.VERSION }} ${{ env.FILES }}
        env:
          VERSION: v1.9.0
          FILES: minerva_author_windows.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Package Mac
        if: startsWith(matrix.os,'mac')
        shell: bash -l {0}
        run: |
          bash package_mac.sh
      - name: Zip Mac
        if: startsWith(matrix.os,'mac')
        shell: bash -l {0}
        run: |
          mv dist minerva_author_macos
          mv minerva_author_macos/app minerva_author_macos/minerva_author
          zip -vr minerva_author_macos.zip minerva_author_macos/ -x "*.DS_Store"
      - name: Release Mac
        if: startsWith(matrix.os,'mac')
        run: |
          gh release upload --clobber ${{ env.VERSION }} ${{ env.FILES }}
        env:
          VERSION: v1.9.0
          FILES: minerva_author_macos.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
